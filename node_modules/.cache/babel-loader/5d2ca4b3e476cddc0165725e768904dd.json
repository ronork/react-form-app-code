{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport * as History from 'history';\nimport rootReducer from './modules';\nexport var history = History.createBrowserHistory();\nvar initialState = {};\nvar enhancers = [];\nvar middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  var devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension());\n  }\n}\n\nvar composedEnhancers = compose.apply(void 0, [applyMiddleware.apply(void 0, middleware)].concat(enhancers));\nexport default createStore(connectRouter(history)(rootReducer), initialState, composedEnhancers);","map":{"version":3,"sources":["/Users/rohangrover/Desktop/create-react-app-redux/src/store.js"],"names":["createStore","applyMiddleware","compose","connectRouter","routerMiddleware","thunk","History","rootReducer","history","createBrowserHistory","initialState","enhancers","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,wBAAhD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAO,IAAMC,OAAO,GAAGF,OAAO,CAACG,oBAAR,EAAhB;AAEP,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CAACP,KAAD,EAAQD,gBAAgB,CAACI,OAAD,CAAxB,CAAnB;;AAEA,IAAIK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,4BAAjC;;AAEA,MAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CL,IAAAA,SAAS,CAACQ,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AAED,IAAMI,iBAAiB,GAAGlB,OAAO,MAAP,UACxBD,eAAe,MAAf,SAAmBW,UAAnB,CADwB,SAErBD,SAFqB,EAA1B;AAKA,eAAeX,WAAW,CACxBG,aAAa,CAACK,OAAD,CAAb,CAAuBD,WAAvB,CADwB,EAExBG,YAFwB,EAGxBU,iBAHwB,CAA1B","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport * as History from 'history'\nimport rootReducer from './modules'\nexport const history = History.createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [thunk, routerMiddleware(history)]\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\n\n  if (typeof devToolsExtension === 'function') {\n    enhancers.push(devToolsExtension())\n  }\n}\n\nconst composedEnhancers = compose(\n  applyMiddleware(...middleware),\n  ...enhancers\n)\n\nexport default createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers\n)\n"]},"metadata":{},"sourceType":"module"}